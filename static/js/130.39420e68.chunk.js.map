{"version":3,"file":"static/js/130.39420e68.chunk.js","mappings":"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","sources":["components/errorBoundary/ErrorBoundary.js","components/randomChar/RandomChar.js","../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/utils/reflow.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/react-transition-group/esm/CSSTransition.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","components/charList/CharList.js","components/charInfo/CharInfo.js","components/pages/MainPage.js"],"sourcesContent":["import {Component} from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\nimport {useEffect, useState} from \"react\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport setContent from \"../../utills/setContent\";\r\n\r\nconst RandomChar = (props) => {\r\n\r\n    const [char, setChar] = useState(null);\r\n\r\n    const {getCharactersById, clearError, setProcess, process} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n        // const timerId = setInterval(this.updateChar, 100000);\r\n\r\n        return () => {\r\n            // clearInterval(timerId);\r\n        }\r\n    }, [])\r\n\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(() => char);\r\n    }\r\n\r\n\r\n    const updateChar = () => {\r\n        clearError();\r\n        const id = Math.floor(Math.random() * (1010914 - 1010000) + 1010000);\r\n        getCharactersById(id)\r\n            .then(onCharLoaded)\r\n            .then(() => setProcess('confirmed'));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"randomchar\">\r\n            {\r\n                setContent(process, View, char)\r\n            }\r\n            <div className=\"randomchar__static\">\r\n                <p className=\"randomchar__title\">\r\n                    Random character for today!<br/>\r\n                    Do you want to get to know him better?\r\n                </p>\r\n                <p className=\"randomchar__title\">\r\n                    Or choose another one\r\n                </p>\r\n                <button onClick={updateChar}\r\n                        className=\"button button__main\">\r\n                    <div className=\"inner\">try it</div>\r\n                </button>\r\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({data}) => {\r\n    const {name, description, thumbnail, homepage, wiki} = data;\r\n    let imgStyle = {objectFit: 'cover'};\r\n    if (thumbnail === \"https://assets.entrepreneur.com/content/3x2/2000/20160701113917-Marvel.jpeg\") {\r\n        imgStyle = {objectFit: 'contain'};\r\n    }\r\n\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">\r\n                    {description ? description : \"There is no description about characters\"}\r\n                </p>\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;\r\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\nimport { forceReflow } from './utils/reflow';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      if (node) forceReflow(node);\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import './charList.scss';\r\nimport {useEffect, useMemo, useRef, useState} from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport Spinner from \"../spiner/Spinner\";\r\nimport PropTypes from \"prop-types\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\n\r\n\r\nconst setContent = (process, Component, newItemLoading) => {\r\n    switch (process) {\r\n        case 'waiting':\r\n            return <Spinner/>;\r\n            break;\r\n        case 'loading':\r\n            return newItemLoading ? <Component/> : <Spinner/>;\r\n            break;\r\n        case 'confirmed':\r\n            return <Component/>;\r\n            break;\r\n        case 'error':\r\n            return <ErrorMessage/>;\r\n            break;\r\n        default:\r\n            throw new Error('Unexpected process state');\r\n    }\r\n}\r\n\r\nconst CharList = (props) => {\r\n\r\n\r\n    const [listChar, setListChar] = useState([]);\r\n    const [newItemsLoading, setNewItemsLoading] = useState(false);\r\n    const [offset, setOffset] = useState(200);\r\n    const [charEnded, setCharEnded] = useState(false);\r\n\r\n\r\n    const {getAllCharacters, process, setProcess} = useMarvelService();\r\n\r\n\r\n    useEffect(() => {\r\n        loadingChar(offset, true);\r\n    }, [])\r\n\r\n\r\n    const onCharsLoaded = (newListChar) => {\r\n        let ended = false;\r\n        if (newListChar.length < 9) {\r\n            ended = true\r\n        }\r\n\r\n        setListChar(listChar => [...listChar, ...newListChar]);\r\n        setNewItemsLoading(false);\r\n        setOffset(offset => offset + 9);\r\n        setCharEnded(ended);\r\n    }\r\n\r\n    const loadingChar = (offset, initial) => {\r\n        initial ? setNewItemsLoading(false) : setNewItemsLoading(true);\r\n        getAllCharacters(offset)\r\n            .then(onCharsLoaded)\r\n            .then(() => setProcess('confirmed'));\r\n    }\r\n\r\n    const refItems = useRef([]);\r\n\r\n\r\n    const onItemFocus = (id) => {\r\n        refItems.current.forEach(item => item.classList.remove('char__item_selected'));\r\n        refItems.current[id].classList.add('char__item_selected');\r\n        refItems.current[id].focus();\r\n    }\r\n\r\n    const renderChars = (arr) => {\r\n        const items = arr.map((char, i) => {\r\n            let imgStyle = {objectFit: 'cover'};\r\n            if (char.thumbnail === \"https://assets.entrepreneur.com/content/3x2/2000/20160701113917-Marvel.jpeg\") {\r\n                imgStyle = {objectFit: 'unset'};\r\n            }\r\n\r\n            const name = char.name.length > 30 ? `${char.name.slice(0, 29)}...` : char.name;\r\n            return (\r\n                <CSSTransition key={char.id} timeout={500} classNames=\"char__item\">\r\n                    <li className=\"char__item\"\r\n                        key={char.id}\r\n                        tabIndex={0}\r\n                        ref={el => refItems.current[i] = el}\r\n                        onClick={() => {\r\n                            props.onCharSelected(char.id);\r\n                            onItemFocus(i);\r\n                        }}\r\n                        onKeyPress={(e) => {\r\n                            if (e.key === ' ' || e.key === \"Enter\") {\r\n                                props.onCharSelected(char.id);\r\n                                onItemFocus(i);\r\n                            }\r\n                        }}>\r\n                        <img src={char.thumbnail} alt={char.name} style={imgStyle}/>\r\n                        <div className=\"char__name\">{name}</div>\r\n                    </li>\r\n                </CSSTransition>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                <TransitionGroup component={null}>\r\n                    {items}\r\n                </TransitionGroup>\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const elements = useMemo(() => {\r\n        return setContent(process, () => renderChars(listChar), newItemsLoading);\r\n    }, [process]);\r\n\r\n    return (\r\n        <div className=\"char__list\">\r\n            {\r\n                elements\r\n            }\r\n            <button className=\"button button__main button__long\"\r\n                    disabled={newItemsLoading}\r\n                    style={{'display': charEnded ? 'none' : 'block'}}\r\n                    onClick={() => loadingChar(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nCharList.propTypes = {\r\n    onCharSelected: PropTypes.func\r\n}\r\n\r\nexport default CharList;\r\n","import './charInfo.scss';\r\nimport {useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport setContent from \"../../utills/setContent\";\r\n\r\nconst CharInfo = (props) => {\r\n\r\n\r\n    const [char, setChar] = useState(null);\r\n\r\n\r\n    const {getCharactersById, clearError, process, setProcess} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateInfoChar();\r\n    }, [props.charId])\r\n\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n\r\n    const updateInfoChar = () => {\r\n        const {charId} = props;\r\n        if (!charId) {\r\n            return;\r\n        }\r\n        clearError();\r\n        getCharactersById(charId)\r\n            .then(onCharLoaded)\r\n            .then(() => setProcess('confirmed'));\r\n    }\r\n\r\n    return (\r\n        <div className=\"char__info\">\r\n            {\r\n                setContent(process, View, char)\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst View = ({data}) => {\r\n    const {name, description, thumbnail, homepage, wiki, comicsList} = data;\r\n\r\n    let imgStyle = {objectFit: 'cover'};\r\n    if (thumbnail === \"https://assets.entrepreneur.com/content/3x2/2000/20160701113917-Marvel.jpeg\") {\r\n        imgStyle = {objectFit: 'contain'};\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <img src={thumbnail} alt={name} style={imgStyle}/>\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">\r\n                {description}\r\n            </div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {comicsList.length > 0 ? null : 'There are no comics for this character'}\r\n                {\r\n                    comicsList.map((item, index) => {\r\n                        // eslint-disable-next-line\r\n                        if (index > 9) return;\r\n                        return (\r\n                            <li className=\"char__comics-item\" key={index + item.id}>\r\n                                {item.name}\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nCharInfo.propTypes = {\r\n    charId: PropTypes.number\r\n}\r\n\r\nexport default CharInfo;\r\n","import ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport decoration from \"../../resources/img/vision.png\";\r\nimport {useState} from \"react\";\r\nimport CharSearchForm from \"../charSearchForm/CharSearchForm\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst MainPage = () => {\r\n\r\n    const [charSelected, setCharSelected] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n        setCharSelected(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Marvel information portal\"\r\n                />\r\n                <title>Marvel information</title>\r\n            </Helmet>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected}/>\r\n                </ErrorBoundary>\r\n                <div>\r\n                    <ErrorBoundary>\r\n                        <CharInfo charId={charSelected}/>\r\n                    </ErrorBoundary>\r\n                    <ErrorBoundary>\r\n                        <CharSearchForm/>\r\n                    </ErrorBoundary>\r\n                </div>\r\n            </div>\r\n\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;\r\n"],"names":["ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","error","_createClass","key","value","errorInfo","this","setState","_jsx","ErrorMessage","props","children","Component","View","_ref","data","name","description","thumbnail","homepage","wiki","imgStyle","objectFit","_jsxs","className","src","alt","style","href","_useState","useState","_useState2","_slicedToArray","char","setChar","_useMarvelService","useMarvelService","getCharactersById","clearError","setProcess","process","useEffect","updateChar","onCharLoaded","id","Math","floor","random","then","setContent","onClick","mjolnir","_extends","Object","assign","bind","target","i","source","prototype","hasOwnProperty","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","create","constructor","replaceClassName","origClass","classToRemove","replace","RegExp","React","forceReflow","node","scrollTop","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","context","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","status","nextCallback","getDerivedStateFromProps","prevState","_proto","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","undefined","mounting","nodeRef","current","ReactDOM","performEnter","performExit","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","childProps","TransitionGroupContext","Provider","noop","contextType","propTypes","defaultProps","removeClass","classes","split","forEach","c","element","classList","remove","setAttribute","baseVal","CSSTransition","appliedClasses","_this$resolveArgument","resolveArguments","removeClasses","addClass","_this$resolveArgument2","type","_this$resolveArgument3","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","phase","add","contains","hasClass","_addClass","_this$appliedClasses$","base","done","getChildMapping","mapFn","result","Children","child","isValidElement","mapper","getProp","prop","getNextChildMapping","nextProps","prevChildMapping","nextChildMapping","prev","next","getValueForKey","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","hasPrev","hasNext","prevChild","isLeaving","cloneElement","values","obj","map","k","TransitionGroup","handleExited","self","ReferenceError","_assertThisInitialized","contextValue","firstRender","mounted","currentChildMapping","component","childFactory","listChar","setListChar","_useState3","_useState4","newItemsLoading","setNewItemsLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","charEnded","setCharEnded","getAllCharacters","loadingChar","onCharsLoaded","newListChar","ended","_toConsumableArray","initial","refItems","useRef","onItemFocus","item","focus","elements","useMemo","newItemLoading","Spinner","Error","arr","items","slice","tabIndex","ref","el","onCharSelected","onKeyPress","e","renderChars","disabled","comicsList","_Fragment","index","updateInfoChar","charId","charSelected","setCharSelected","Helmet","content","RandomChar","CharList","CharInfo","CharSearchForm","decoration"],"sourceRoot":""}